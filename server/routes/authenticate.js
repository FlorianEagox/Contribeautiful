const router = require('express').Router();
const fetch = require('node-fetch');
const { URLSearchParams } = require('url');
const db = require('monk')('mongodb://localhost/contribeautiful');
const GitUtils = require('../GitUtils');

const tokenUrl = 'https://github.com/login/oauth/access_token';
const clientUrl = 'http://sethpainter.com:3000'; // TODO: make this .env or serve client and server together.

router.get('/', async(req, res) => {
	if(!req.query?.code) { // make sure we get a code
		res.send('No code :(');
		return;
	}
	const params = new URLSearchParams();
	params.append('client_id', process.env.VUE_APP_GH_CLIENT_ID);
	params.append('client_secret', process.env.GH_CLIENT_SECRET);
	params.append('code', req.query.code);
	console.log(params)
	const tokenRequest = await fetch(tokenUrl, { // request to get auth token
		method: 'POST', 
		headers: { 'Accept': 'application/json' }, 
		body: params
	});
	if (!tokenRequest.ok) {
		res.status(500).send('Oopsie Poopsie, something went wrong!');
		return;
	}

	const {access_token} = await tokenRequest.json();
	
	const {login, id} = GitUtils.getGitHubProifle(access_token);

	// Create a repo if the user doesn't already have one.
	const repoReq = await fetch(`https://api.github.com/repos/${login}/contribeautiful_data`);
	if(repoReq.status == 404) { // check if the repo exists
		try {
			await fetch('https://api.github.com/user/repos', {
				method: 'POST',
				headers: {'Authorization': `token ${access_token}`},
				body: JSON.stringify({
					name: 'contribeautiful_data',
					description: 'autogenerated by TheFoxarmy/Contribeautiful',
					homepage: 'https://sethpainter.com/contribeautiful',
					has_issues: false,
					has_projects: false,
					has_wiki: false,
					has_downloads: false,
					auto_init: true
				})
			});
			await GitUtils.cloneRepo();
		} catch(e) {
			res.status(500).send('Failed to create repo');
			return;
		}
	}

	const users = db.get('users');

	const user = await users.findOneAndUpdate({github_id: id}, {$set: {access_token}}, {upsert: true});
	res.redirect(`${clientUrl}/${user._id}`);
	db.close();
});

module.exports = router;